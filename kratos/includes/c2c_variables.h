//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ \.
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:         BSD License
//                   Kratos default license: kratos/license.txt
//
//  Main authors:    Riccardo Rossi
//











#if !defined(KRATOS_C2C_VARIABLES_H_INCLUDED )
#define  KRATOS_C2C_VARIABLES_H_INCLUDED


// System includes


// External includes


// Project includes
#include "includes/define.h"
#include "containers/variable_component.h"
#include "containers/vector_component_adaptor.h"


#undef  KRATOS_EXPORT_MACRO
#define KRATOS_EXPORT_MACRO KRATOS_API

//TODO: move to the KratosC2C application or eventually to the FluidDynamicsAsNeeded
namespace Kratos
{

    KRATOS_DEFINE_DOUBLE_VARIABLE( SOLID_TEMPERATURE )
    KRATOS_DEFINE_DOUBLE_VARIABLE( FLUID_TEMPERATURE )
    KRATOS_DEFINE_DOUBLE_VARIABLE( AVERAGE_TEMPERATURE )
    KRATOS_DEFINE_DOUBLE_VARIABLE( INLET_TEMPERATURE)
//     KRATOS_DEFINE_DOUBLE_VARIABLE( AMBIENT_TEMPERATURE )
    KRATOS_DEFINE_DOUBLE_VARIABLE( Y_WALL)
    KRATOS_DEFINE_DOUBLE_VARIABLE( COUNTER )
    KRATOS_DEFINE_DOUBLE_VARIABLE( DISTANCE_CORRECTION )
    KRATOS_DEFINE_DOUBLE_VARIABLE( COMPUTED_DISTANCE )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MATERIAL )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_AVERAGE_TEMPERATURE)

    KRATOS_DEFINE_DOUBLE_VARIABLE(  LAST_AIR)
    KRATOS_DEFINE_DOUBLE_VARIABLE(  PRESSURES)
    KRATOS_DEFINE_DOUBLE_VARIABLE(  TEMPERATURES)
    KRATOS_DEFINE_3D_VARIABLE_WITH_COMPONENTS( VELOCITIES )

    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_DENSITY )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_SPECIFIC_HEAT )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_THICKNESS )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_SFACT )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_VFACT )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_CONDUCTIVITY )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_HTC_ENVIRONMENT )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_TEMPERATURE )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MOULD_INNER_TEMPERATURE )

    KRATOS_DEFINE_VARIABLE( int, NODE_PROPERTY_ID )
    KRATOS_DEFINE_DOUBLE_VARIABLE( HTC )
    KRATOS_DEFINE_VARIABLE( int, REF_ID )
    KRATOS_DEFINE_DOUBLE_VARIABLE( PARTICLE_RADIUS )
    KRATOS_DEFINE_DOUBLE_VARIABLE( POSETIVE_DISTANCE )
    KRATOS_DEFINE_DOUBLE_VARIABLE( NAGATIVE_DISTANCE )
    KRATOS_DEFINE_VARIABLE( bool, IS_ESCAPED )
    KRATOS_DEFINE_VARIABLE( int, IS_SOLIDIFIED )
    KRATOS_DEFINE_DOUBLE_VARIABLE( SOLIDFRACTION )
    KRATOS_DEFINE_DOUBLE_VARIABLE( SOLIDIF_TIME )
    KRATOS_DEFINE_DOUBLE_VARIABLE( SOLIDIF_MODULUS )
    KRATOS_DEFINE_DOUBLE_VARIABLE( FILLTIME )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MACRO_POROSITY )
    KRATOS_DEFINE_DOUBLE_VARIABLE( SHRINKAGE_POROSITY )
    KRATOS_DEFINE_DOUBLE_VARIABLE( MAX_VEL )
    KRATOS_DEFINE_VARIABLE( int, IS_GRAVITY_FILLING )
    KRATOS_DEFINE_DOUBLE_VARIABLE( VOLUME_FRACTION )
    KRATOS_DEFINE_DOUBLE_VARIABLE( KAPPA )
    KRATOS_DEFINE_DOUBLE_VARIABLE( EPSILON )
    KRATOS_DEFINE_DOUBLE_VARIABLE( SHRINKAGE_POROSITY_US )
    KRATOS_DEFINE_DOUBLE_VARIABLE( SOLIDIF_MODULUS_US )
    KRATOS_DEFINE_DOUBLE_VARIABLE( TEMPERATURES_US )
    KRATOS_DEFINE_DOUBLE_VARIABLE( FRONT_MEETING )

}  // namespace Kratos.

#undef  KRATOS_EXPORT_MACRO
#define KRATOS_EXPORT_MACRO KRATOS_NO_EXPORT

#endif // KRATOS_C2C_VARIABLES_H_INCLUDED  defined
